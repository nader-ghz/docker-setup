version: '3.4'

networks:
  laravel:

services:
  web:
    image: nginx:1.14.2-alpine
    restart: always
    volumes:
      - ./ekpik:/var/www/html:delegated
      - ./conf.d:/etc/nginx/conf.d/
      - ./dhparam:/etc/nginx/dhparam
      - ./certbot/conf/:/etc/nginx/ssl/
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - php
      - redis
      - mysql
    networks:
      - laravel

  certbot:
     image: certbot/certbot:latest
     command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email admin@ekpik.com --agree-tos --no-eff-email -d ekpik.com
     volumes:
       - ./certbot/conf/:/etc/letsencrypt
       - ./certbot/logs/:/var/log/letsencrypt
       - ./certbot/data:/usr/share/nginx/html/letsencrypt


  mysql:
    image: mariadb:10.6
     mysql:
        image: mariadb:10.6
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
          - 3306:3306
        environment:
          MYSQL_USER: '%'
          MYSQL_ROOT_PASSWORD: root
          SERVICE_TAGS: dev
          SERVICE_NAME: mysql
        networks:
          - laravel

      phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        depends_on:
         - mysql
        environment:
         - PMA_ARBITRARY=1
        restart: always
        ports:
         - 8080:80
        volumes:
         - /sessions
         - ~/docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
         - /custom/phpmyadmin/theme/:/www/themes/theme/
        networks:
         - laravel
      php:
      php:
          build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
              - UID=${UID:-1000}
              - GID=${GID:-1000}
          container_name: php
          volumes:
            - ./ekpik:/var/www/html:delegated
            - ./php/php.ini:/usr/local/etc/php/php.ini
          networks:
            - laravel

        redis:
          image: redis:alpine
          container_name: redis
          restart: unless-stopped
          ports:
            - 6379:6379
          networks:
            - laravel

        composer:
          build:
            context: ./dockerfiles
            dockerfile: composer.dockerfile
            args:
              - UID=${UID:-1000}
              - GID=${GID:-1000}
          container_name: composer
          volumes:
            - ./ekpik:/var/www/html
          working_dir: /var/www/html
          depends_on:
                - php
              user: root
              entrypoint: ['composer', '--ignore-platform-reqs']
              networks:
                - laravel
            npm:
              image: node:latest
              container_name: npm
              volumes:
                - ./ekpik:/var/www/html
              ports:
                - 3000:3000
                - 3001:3001
              working_dir: /var/www/html
              entrypoint: ['npm']
              networks:
                - laravel

            artisan:
              build:
                context: ./dockerfiles
                dockerfile: php.dockerfile
                args:
                  - UID=${UID:-1000}
                  - GID=${GID:-1000}
              container_name: artisan
              volumes:
                - ./ekpik:/var/www/html:delegated
              depends_on:
                - mysql
              working_dir: /var/www/html
              entrypoint: ['php', '/var/www/html/artisan']
              networks:
                - laravel